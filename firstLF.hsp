#include "dmxbridge.hsp"
#include "midiapi23.hsp"
//#include "keionlight_eachlight.hsp"
#include "keionlight.hsp"
#packopt hide 1
#packopt name "FirstLF.exe"



#uselib "user32.dll"
#func GetWindowLong "GetWindowLongA" int,int 
#func SetWindowLong "SetWindowLongA" int,int,int


//------------------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------------------------

//ポート番号(「USB Serial COM?」 の ?)
//#define ABDS_PORT 5
//上パラメータは、設定ファイルに移動しました
//raw monitor(DMX各パラメータのモニター)の有効/無効
#define DMX_RAW_MONITOR 1

//------------------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------------------------


//TODO: ミラボだけ一色固定機能


*dmxinit
	dim ABDS_PORT
	ABDS_PORT = 3
	
	sdim set, 4096
	sdim sol, 256
	sdim sel, 256, 16
	exist "manifest"
	if strsize != -1{
		bload "manifest", set
		notesel set
		repeat notemax
			notesel set
			noteget sol, cnt
			sol = getpath(sol, 16)
			sol = strtrim(sol, 0, ' ')
			repeat 24
				strrep sol, "  ", " "
				if stat = 0: break
			loop
			split sol, " ", sel
			if sel(0) = "com"{
				ABDS_PORT = int(sel(1))
			}
		loop
	}
	
	screen 16, GINFO_DISPX, GINFO_DISPY
	width GINFO_DISPX / 2, GINFO_DISPY / 3 * 2, GINFO_DISPX / 4, GINFO_DISPY / 6
	font msgothic,20,FONT_BOLD
	GetWindowLong hwnd,-16
	SetWindowLong hwnd,-16,stat|$10000|$40000
	gsel 16, 1
	oncmd gosub *wm_size, $0005
	
	screen 0, 960, 540, SCREEN_HIDE
	title "Lights"
	screen 1, 360, 240, SCREEN_FIXEDSIZE + SCREEN_HIDE, GINFO_WX1, GINFO_WY2
	title "Options"
	cls 4
	
	gsel 0
	dmx_initialize ABDS_PORT, 38400
	dmxstat = stat
	
	dim monitor_id
	dim monitor_xs
	dim monitor_ys
	dmx_monitor DMX_RAW_MONITOR
	monitor_id = stat
	gsel monitor_id, -1
	monitor_xs = GINFO_WINX
	monitor_ys = GINFO_WINY
	
	gsel 0
//	dmx_setparam 111, 255
	dmx_setparam 70, 255
	dmx_setparam 65, 64
	wait 25
*init
	gsel 0
	font msgothic,20,FONT_BOLD
	
	dim led,3
	dim trafsig,12
	dim mirror,3
	
	ddim transition_progress
	transition_progress=1.0
	ddim transition_speed
	transition_speed=0.00032
	
	dim comstatus
	comstatus = 0
	
	dim flip
	flip=0
	
	dim led_t,3
	dim trafsig_t,12
	dim mirror_t,3
	
	dim led_b,3
	dim trafsig_b,12
	dim mirror_b,3
	
	dim sellist,4
	sellist(0)=0,0,0,0
	dim seli

	dim absc, 4
	
	dim cpal,24,2
	cpal(0,0)= $000000, $FF0000, $33FF33, $0000FF, $FFFFFF, $FF88AA, $55FFFF, $FF0000, $00FFFF, $0000FF, $FF6611, $FFFF33, $FF00FF
	cpal(0,1)= $000000, $FF0000, $33FF33, $0000FF, $FFFFFF, $FF88AA, $55FFFF, $FFFF00, $00FFFF, $FF00FF, $FF6611, $FFFF33, $FF00FF
	cls 4
	repeat length(cpal)-1
		rgbcolor cpal(cnt+1,0)
		boxf 40*(cnt\6),40*(cnt/6)+ 0,40*(cnt\6)+39,40*(cnt/6)+19
		rgbcolor cpal(cnt+1,1)
		boxf 40*(cnt\6),40*(cnt/6)+ 20,40*(cnt\6)+39,40*(cnt/6)+39
	loop
	pos 0,120
	if dmxstat!=0{
		font msgothic,20,FONT_BOLD
		color 255,64,64
		mes "FAILED TO INIT DMX at Port " + ABDS_PORT + " ("+dmxstat+")"
		comstatus = 1
	}
	
	//display usage
	color 255, 255, 255
	mes " ENTER      : BLACKOUT"
	mes " UP/DN ARROW: SPEED"
	mes " LF/RI ARROW: FADE"
	
	dmx_monitor_refresh
	gosub *draw_combine
	if comstatus = 0{
		wait 300
	}
	if comstatus = 1{
		wait 300
	}
	dim blackout
	blackout=1
	dim cselect
	cselect=7
	
	//[ms]
	dim pat_interval
	pat_interval=400
	ddim pat_offset
	pat_offset=0.0
	
	//送信タイミング制御
	dim sendtimer
	sendtimer=gettime(7)
	
	//信号パターン(ライト, バンク, パターン)
	//0〜9: 選択中のテーマカラー A〜Z: 発色リストに入っているカラー a〜z: 固定パレットのカラー
	sdim sigpat, 4096, 8
	sigpat(0) = "10101010 01010101"
	sigpat(1) = "11111111 11111111"
	sigpat(2) = "11001100 01100110 00110011 10011001"
	sigpat(3) = "11111111 00000000"
	sigpat(4) = "abcdabcd bcdebcde cdefcdef defgdefg efgaefga fgabfgab gabcgabc"
	sdim sigpat_split, 256, 256
	dim sigpat_select
	sigpat_select = 0
	
	dim  fixpal, 26
	fixpal(0) = $FF0000, $FF5500, $FFFF00, $55FF00, $00FF55, $0000FF, $FF00FF
	
	dim override_avail
	override_avail = 1
	dim override_list, 4
	override_list(0) = 0
	dim override_pollinterval
	override_pollinterval = 8
	dim override_pollresend
	override_pollresend = 0
	
	
	gsel 16
	if comstatus = 1{
		title "(NO BRIDGE CONNECTION)"
	}
*main
	//onkey gosub *event_ky
//	gsel 0
	gsel 16
	oncmd gosub *event_ky, $0100
	oncmd gosub *event_kyrelease, $0101
	oncmd gosub *wm_activate, $0006
	dim loopcount
	loopcount = 0
	repeat
		gosub *proc_pat
		gosub *proc_trans
		
		gsel 16
		redraw 0
		
		gosub *draw_ui
		gosub *draw_combine
		gosub *draw_overlay
		
		gsel 16
		redraw 1
		await 3
		loopcount += 1
	loop
*proc_trans
	if transition_progress!=1.0{
		transition_progress+=double(valueOfTimer())*transition_speed
		if transition_progress>=1.0 | transition_progress<0.0{
			transition_progress=1.0
		}
		repeat 3
			led(cnt)=limit( transition_progress*led_t(cnt)+(1.0-transition_progress)*led_b(cnt) ,0,255)
			mirror(cnt)=limit( transition_progress*mirror_t(cnt)+(1.0-transition_progress)*mirror_b(cnt) ,0,255)
		loop
		repeat 12
			trafsig(cnt)=limit( transition_progress*trafsig_t(cnt)+(1.0-transition_progress)*trafsig_b(cnt) ,0,255)
		loop
		
		override_avail = 0
		repeat 4
			if override_list(cnt) != 0{
				override_avail = 1
			}
		loop
		
		if override_avail = 0{
			if transition_progress=1.0{
				//logmes "SEND NORM"
				set_led led(0)*65536+ led(1)*256+ led(2)
				set_mirror mirror(0)*65536+ mirror(1)*256+ mirror(2)
				repeat 12
					dmx_setparam 80+cnt, trafsig(cnt)
					dmx_setparam 96+cnt, trafsig(cnt)
				loop
			}else:if (gettime(7)+10000-sendtimer)\10000>16{
				//logmes "SEND NORM"
				sendtimer=gettime(7)
				set_led led(0)*65536+ led(1)*256+ led(2)
				set_mirror mirror(0)*65536+ mirror(1)*256+ mirror(2)
				repeat 12
					dmx_setparam 80+cnt, trafsig(cnt)
					dmx_setparam 96+cnt, trafsig(cnt)
				loop
			}
		}else{
			//Override
			if override_pollresend >= override_pollinterval{
				//logmes "send" + override_pollresend
				override_pollresend = 0
				repeat length(override_list)
					if override_list(cnt) = ';'{
						set_led 0
						set_mirror 0
						repeat 12
							dmx_setparam 80+cnt, 0
							dmx_setparam 96+cnt, 0
						loop
						repeat 3
							mirror(cnt) = 0
							mirror_t(cnt) = 0
							led(cnt) = 0
							led_t(cnt) = 0
						loop
						repeat 12
							trafsig(cnt) = 0
							trafsig_t(cnt) = 0
						loop
						transition_progress = 1.0
					}
				loop
			}
		}
	}else{
	}
	override_pollresend += 1
	return
*proc_pat
	if valueOfTimer()+pat_offset>pat_interval or force_next_pattern = 1{
		force_next_pattern = 0
		pat_offset=(valueOfTimer()+pat_offset)\pat_interval
		//next pattern
		
		flip++
		
		if flip=0{
			
		}
		if flip\4=0{
			seli=(seli+1)\4
			if sellist(seli)=0{
				seli=0
			}else{
			}
			cselect=sellist(seli)
		}
		newc=cpal(cselect,flip\2)
		if blackout=1{
			repeat 3
				led_t(cnt)=0
				mirror_t(cnt)=0
			loop
			repeat 12
				trafsig_t(cnt)=0
			loop
		}else:if blackout = 0{
			if sigpat_select = 3{
				//sigpatが3のときは、LEDも同時に点滅させる
				if flip \ 2 = 0{
					led_t(0)=newc/65536
					led_t(1)=newc\65536/256
					led_t(2)=newc\256
				}else{
					led_t(0)=0
					led_t(1)=0
					led_t(2)=0
				}
				
			}else{
				led_t(0)=newc/65536
				led_t(1)=newc\65536/256
				led_t(2)=newc\256
			}
			mirror_t(0)=newc/65536
			mirror_t(1)=newc\65536/256
			mirror_t(2)=newc\256
			//logmes flip
			split sigpat(sigpat_select), " ", sigpat_split
			fs = stat
			repeat 4
//				if (cnt\2)=flip\2{
				c = peek(sigpat_split(flip\fs), cnt)
				if       c = '1'{
					//selected color
					trafsig_t(3*cnt+0)=newc/65536
					trafsig_t(3*cnt+1)=newc\65536/256
					trafsig_t(3*cnt+2)=newc\256
				}else:if c = '0'{
					//black
					trafsig_t(3*cnt+0)=0
					trafsig_t(3*cnt+1)=0
					trafsig_t(3*cnt+2)=0
				}else:if c >= 'a' and c <= 'z'{
					//fixed color
					trafsig_t(3*cnt+0)=fixpal(c - 'a')/65536
					trafsig_t(3*cnt+1)=fixpal(c - 'a')\65536/256
					trafsig_t(3*cnt+2)=fixpal(c - 'a')\256
				}
			loop
		}else:if blackout = 2{
			repeat 3
				led_t(cnt)=0
			loop
			repeat 12
				trafsig_t(cnt)=0
			loop
			mirror_t(0)=newc/65536
			mirror_t(1)=newc\65536/256
			mirror_t(2)=newc\256
		}
		
		repeat 3
			led_b(cnt)=led(cnt)
			mirror_b(cnt)=mirror(cnt)
		loop
		repeat 12
			trafsig_b(cnt)=trafsig(cnt)
		loop
		transition_progress=0.0
		
		
		resettimer
	}
	return
*draw_ui
	gsel 0
	color 64,64,64
	boxf
	
	font msgothic,20, FONT_BOLD
	
	color 127,127,127
	boxf 10,10,350,350
	color 64,64,64
	boxf 11,11,349,349
	
	
	pos 20,20
	color 240,240,240
	mes "LED     "
	color led(0), led(1), led(2)
	boxf 110,20,130,40
	pos 20,60
	color 240,240,240
	mes "TRAFSIG "
	repeat 4
		color trafsig(cnt*3+0), trafsig(cnt*3+1), trafsig(cnt*3+2)
		boxf 110+40*cnt,60,130+40*cnt,80
	loop
	pos 20,100
	color 240,240,240
	mes "MIRROR  "
	color mirror(0), mirror(1), mirror(2)
	boxf 110,100,130,120
	
	pos 20,140
	color 240,240,240
	mes "SEQ     ",1
	repeat 4
		if sellist(cnt)!=0{
			x = GINFO_CX
			y = GINFO_CY
			color 32, 32, 32
			boxf x -  1, y -  1, x + 21, y + 21
			rgbcolor cpal(sellist(cnt), 0)
			boxf x +  0, y +  0, x + 20, y + 10
			rgbcolor cpal(sellist(cnt), 1)
			boxf x +  0, y + 10, x + 20, y + 20
			if cpal(sellist(cnt), 0) != cpal(sellist(cnt), 1){
				color 64, 64, 64
				line x +  0, y + 10, x + 20, y + 10
			}
			pos x - 1, y - 1
			font MSGOTHIC, 22, FONT_BOLD
			color 0, 0, 0
			mes ""+strf("%2d",sellist(cnt))+" ",1
			pos x - 0, y - 0
			font MSGOTHIC, 20, FONT_BOLD
			color 240, 240, 240
			mes ""+strf("%2d",sellist(cnt))+" ",1
		}
	loop
	pos 240,140
	color 240, 240, 240
	mes "("+strf("%2d",sellist(seli)),1
	repeat 4
		if cnt=flip\4{
			if transition_progress!=1.0{
				mes "-",1
			}else{
				mes "*",1
			}
		}else{
			mes ".",1
		}
	loop
	mes ")"
	
	pos 20,180
	color 240,240,240
	if blackout=1{
		mes "ALL AVL "+"LIGHTS OFF"
	}else:if blackout = 0{
		mes "ALL AVL "+"ON"
	}else:if blackout = 2{
		mes "ALL AVL "+"MIRROR ONLY"
	}
	
	pos 20,220
	mes "INTERV  "+strf("%1d.%.3d",pat_interval/1000,pat_interval\1000)+" ↓SLOW   ↑FAST"
	pos 20,300
	mes "FADE    "+strf("%5d",transition_speed*100000)+" ←SLOW   →FAST"

	pos 20, 260
	mes "BPM     " + strf("%.2f", 60000.0 / pat_interval)
	
	color 127,127,127
	line 92,20,92,340
	
	
	
	gsel 1
	font MSGOTHIC, 20, FONT_BOLD
	redraw 0
	color 64,64,64
	boxf
	color 240, 240, 240
	pos 0,0
	mes "OVERRIDE:"
	repeat length(override_list)
		if override_list(cnt) = ';'{
			pos 10, GINFO_CY
			mes "; IMMEDIATE BLACK & ALIGN BEAT"
		}
	loop
	pos 0, 120
	mes "SIG PATTERN: "
	pos 10, 140
	mes sigpat_select
	redraw 1
	
	
	dmx_monitor_refresh
	
	return



*event_ky
	if wparam=13{
		//Enter blackout
		blackout=(blackout + 1) \ 2
	}
	if wparam='0'{
		//Only Mirror
		blackout=2
	}
	if wparam='1'{
		sellist_control 1
	}
	if wparam='2'{
		sellist_control 2
	}
	if wparam='3'{
		sellist_control 3
	}
	if wparam='4'{
		sellist_control 4
	}
	if wparam='5'{
		sellist_control 5
	}
	if wparam='6'{
		sellist_control 6
	}

	if wparam='Q'{
		sellist_control 7
	}
	if wparam='W'{
		sellist_control 8
	}
	if wparam='E'{
		sellist_control 9
	}
	if wparam='R'{
		sellist_control 10
	}
	if wparam='T'{
		sellist_control 11
	}
	if wparam='Y'{
		sellist_control 12
	}
	if wparam=38{
		//↑
		pat_interval-=10
	}
	if wparam=40{
		//↓
		pat_interval+=10
	}
	if wparam=33{
		//PgUp
		pat_interval-=100
	}
	if wparam=34{
		//PgDn
		pat_interval+=100
	}
	if wparam=37{
		transition_speed/=2
	}
	if wparam=39{
		transition_speed*=2
	}
	if wparam = 189{
		//-
		sigpat_select = 0
	}
	if wparam = 222{
		//^
		sigpat_select = 1
	}
	if wparam = 220{
		// \
		sigpat_select = 2
	}
	if wparam = 192{
		//@
		sigpat_select = 3
	}
	if wparam = 219{
		//[
		sigpat_select = 4
	}
	if wparam = 187{
		// ;
		repeat length(override_list)
			if override_list(cnt) = ';' or override_list(cnt) = 0{
				override_list(cnt) = ';'
				break
			}
		loop
	}
	if wparam = 112{
		//F1 Double Tempo
		pat_interval /= 2
	}
	if wparam = 113{
		//F1 Half Tempo
		pat_interval *= 2
	}
	if wparam = 190{
		// .
		resettimer
		pat_offset = 0
		flip = 3
		transition_progress=0.0
		force_next_pattern = 1
	}
	pat_interval=limit(pat_interval,20,3000)
	transition_speed=limitf(transition_speed, 0.00001, 0.16384)
	return



*event_kyrelease
	if wparam = 187{
		repeat length(override_list)
			if override_list(cnt) = ';'{
				override_list(cnt) = 0
			}
		loop
		resettimer
		pat_offset = 0
		flip = 3
		transition_progress=0.0
		force_next_pattern = 1
	}
	return



*draw_overlay
	if ginfo_act != 16{
		gsel 16
		rgbcolor $404040
		gmode 3, 32, 32, 232
		grect ginfo_winx/2, ginfo_winy/2, 0.0, ginfo_winx*2/3 + 2, ginfo_winy*1/2 + 2
		rgbcolor $FF4444
		line ginfo_winx*1/6, ginfo_winy*1/4, ginfo_winx*1/6, ginfo_winy*3/4
		line ginfo_winx*1/6, ginfo_winy*1/4, ginfo_winx*5/6, ginfo_winy*1/4
		line ginfo_winx*5/6, ginfo_winy*1/4, ginfo_winx*5/6, ginfo_winy*3/4
		line ginfo_winx*1/6, ginfo_winy*3/4, ginfo_winx*5/6, ginfo_winy*3/4
		rgbcolor $FF4444
		pos ginfo_winx/2 - 44, ginfo_winy/2 - 10
		font msgothic,20, FONT_BOLD
		mes "INACTIVE"
	}
	return

#deffunc sellist_control int cid
	psl_f=-1
	repeat length(sellist)
		if sellist(cnt)=cid{
			psl_f=-1
			lcnt=cnt
			repeat length(sellist)-1-lcnt, 1+lcnt
				sellist(cnt-1)=sellist(cnt)
			loop
			sellist(3)=0
			break
		}
		if sellist(cnt)=0{
			if cnt=0{
				cselect=sellist(seli)
			}
			psl_f=cnt
			break
		}
	loop
	if psl_f=-1{
		return
	}
	sellist(psl_f)=cid
	
return

*wm_activate
	if (wparam & $FFFF) = 1 or (wparam & $FFFF) = 2{
		gsel 16, 1
	}
	return


*wm_size
	logmes (lparam \ 65536)
	logmes (lparam / 65536)
	return

*draw_combine
	gsel 16
	
	layout = 0
	if GINFO_WINY >= (20 + 360 + 40 + 240 + 20){
		layout |= 1
	}
	if GINFO_WINY >= (20 + 360 + 40 + 240 + 20 + monitor_ys + 20){
		layout |= 2
	}
	
	rgbcolor $808080
	boxf
	
	pos 20, 20
	gcopy 0, 0, 0, 360, 360
	
	if (layout & 1) = 1{
		//たて
		pos 20, 20 + 360 + 40
	}else{
		//よこ
		pos 20 + 360 + 40, 20
	}
	gcopy 1, 0, 0, 360, 240
	
	if layout = 1{
		//たて
		pos 20 + 360 + 40, 20
	}
	if layout = 0{
		//よこ
		pos 20 + 360 + 40, 20 + 240 + 40
	}
	if layout = 2{
		//ぜんぶたて
		pos 20, 20 + 360 + 40
	}
	if layout = 3{
		pos 20, 20 + 360 + 40 + 240 + 40
	}
	gcopy monitor_id, 0, 0, monitor_xs, monitor_ys
	return
